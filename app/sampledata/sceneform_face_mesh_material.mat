material {
    name : "face material",
    parameters : [
            {
               type : samplerExternal,
               name : exTexture
            },
             {
                type : sampler2d,
                name : lut
             },
             {
                type : float,
                name : lutResolution
             }
        ],
        requires : [
            uv0
        ],
    shadingModel : unlit,
    blending : transparent,
    //maskThreshold : 0.5,
    transparency : twoPassesOneSide,
}
fragment {
    void material(inout MaterialInputs material) {
        prepareMaterial(material);
        float4 inColor = texture(materialParams_exTexture, getUV0());
        inColor.rgb *= inColor.a;
        float s = materialParams.lutResolution;
        float3 c = (s - 1.0) / s * inColor.rgb + float3(1.0 / (2.0 * s));
        float column = c.b * (s - 1.0);
        float u1 = c.r / s + floor(column) / s;
        float u2 = c.r / s + ceil(column) / s;
        float v = c.g;
        float3 c1 = texture(materialParams_lut, float2(u1, v)).rgb;
        float3 c2 = texture(materialParams_lut, float2(u2, v)).rgb;
        material.baseColor.rgb = mix(c1, c2, fract(column));
        material.baseColor.a = inColor.a;
    }
}
